1. Short Answer
  A:
  Interfaces:

    List
    RandomAccess
    Cloneable
    Serializable
    Collection
    Iterable
 Class:

    AbstractList
    ------------------------------------------------
    b
   1-In list<Employee>.contains method it access the class .equal, but since the signature of .equal in
     Employee signature is different that the super class because it has in args Employee not Object as
     in super class.
   2-having the Employee Class as a key is problem if you donâ€™t use override method hashcode(),
     because it will match by reference not values.
     3-After the Employee Class is added in HashMap of removed duplicates which change the key of it in
       HashMap, which make the Employee Object with same name and salary is not the same key,
       solution is to remove visited attribute from .equal in Employee class
       ------------------------------------------------------------------------
       E
       1-Java 8 handles this by allowing classes to implement multiple interfaces with default methods. If a class implements multiple interfaces that provide the same default method, the class must override the method to resolve the conflict.



      2- If an interface inherits from multiple interfaces with conflicting default methods, it must provide its own implementation of the method to resolve the conflict.
